Option 1: Manual Cookies
Behavior: Uses the provided cookies directly
Message: "Using provided web cookies..."

    node src/cli.js webcupid95625 --following \
  --webAuthToken "your_auth_token" \
  --webCt0 "your_ct0_token" \
  --out following.json

Option 2: Automatic Cookie Extraction
Behavior: Extracts cookies from your existing Chrome session
Message: "Falling back to web authentication..." â†’ "Attempting to extract cookies from existing Chrome session..."

node src/cli.js webcupid95625 --following \
  --out following.json



âœ… Yes, the system automatically gets new cookies when Twitter changes them!
Here's exactly what happens:
Scenario 1: Invalid/Corrupted Cookie File
    System tries to load cookies from file
    File is corrupted/invalid â†’ "Failed to load cookies from file"
    Automatically falls back: Extracts fresh cookies from Chrome
    Saves new cookies: Updates the file with valid cookies
Scenario 2: Valid File but Expired Cookies (401 Error)
    System loads cookies from file successfully
    Makes API call with cached cookies
    API returns 401 (Unauthorized) because Twitter changed cookies
    Automatic recovery: Calls refreshCookiesFromChrome()
    Gets fresh cookies: Extracts new cookies from Chrome
    Retries API call: Uses the new valid cookies
    Updates cache: Saves new cookies to file
The Complete Flow:
    1. Try cached cookies from file
    â†“ (if file invalid/not found)
    2. Extract fresh cookies from Chrome
    â†“ (if API fails with 401)
    3. Refresh cookies from Chrome
    â†“
    4. Retry API call with new cookies
    â†“
    5. Save new cookies to file

Key Benefits:
Automatic Recovery: No manual intervention needed
Always Works: Even if Twitter changes cookies frequently
Efficient: Only connects to Chrome when necessary
Persistent: Saves working cookies for future use
So yes, when Twitter changes cookies and the API fails, the system will automatically detect this and get fresh cookies from your Chrome session! ðŸŽ‰